# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
url --url=http://192.168.110.210/cblr/links/CentOS-6.7-x86_64
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto static --ip 192.168.100.221 --gateway 192.168.100.254 --nameserver 192.168.100.240 --hostname fsmanager
network --onboot yes --device eth1 --bootproto dhcp --hostname fsmanager
network --onboot yes --device eth2 --bootproto dhcp --hostname fsmanager
network --onboot yes --device eth3 --bootproto dhcp --hostname fsmanager
rootpw  --iscrypted $1$M16kNwgV$uQVaE2Ma5pgY4.jvPBrwD/
# Reboot after installation
reboot
firewall --disabled
authconfig --useshadow  --passalgo=sha512
selinux --disabled
timezone Asia/Shanghai
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#clearpart --all --initlabel
#volgroup VolGroup --pesize=32768 pv.008002
#logvol /home --fstype=ext4 --name=lv_home --vgname=VolGroup --grow --size=1
#logvol / --fstype=ext4 --name=lv_root --vgname=VolGroup --size=102400
#logvol swap --name=lv_swap --vgname=VolGroup --size=32000

#part /boot --fstype=ext4 --asprimary --size=500
#part pv.008002 --grow --asprimary --size=1

repo --name="CentOS"  --baseurl=http://192.168.110.210/cblr/links/CentOS-6.7-x86_64 --cost=100
repo --name="source-1"  --baseurl=http://192.168.110.210/cobbler/ks_mirror/CentOS-6.7-x86_64 --cost=1000

%packages
@Base
@Console internet tools
@Core
@Debugging Tools
@Desktop Platform
@Directory Client
@E-mail server
@Fonts
@General Purpose Desktop
@Graphical Administration Tools
@Hardware monitoring utilities
@Input Methods
@Large Systems Performance
@Legacy UNIX compatibility
@Legacy X Window System compatibility
@NFS file server
@Network file system client
@Networking Tools
@Performance Tools
@Perl Support
@Scientific support
@Security Tools
@Server Platform
@X Window System
@base
createrepo
cyrus-sasl-md5
gnutls-utils
libvirt-client
libvirt-python
ntp
ntpdate
python-simplejson
python-virtinst
yajl

%end

%pre
set -x -v
exec 1>/tmp/ks-pre.log 2>&1

# Once root's homedir is there, copy over the log.
while : ; do
    sleep 10
    if [ -d /mnt/sysimage/root ]; then
        cp /tmp/ks-pre.log /mnt/sysimage/root/
        logger "Copied %pre section log to system"
        break
    fi
done &


curl "http://192.168.110.210/cblr/svc/op/trig/mode/pre/system/fsmanager" -o /dev/null
# Start pre_install_network_config generated code
# generic functions to be used later for discovering NICs
mac_exists() {
  [ -z "$1" ] && return 1

  if which ip 2>/dev/null >/dev/null; then
    ip -o link | grep -i "$1" 2>/dev/null >/dev/null
    return $?
  elif which esxcfg-nics 2>/dev/null >/dev/null; then
    esxcfg-nics -l | grep -i "$1" 2>/dev/null >/dev/null
    return $?
  else
    ifconfig -a | grep -i "$1" 2>/dev/null >/dev/null
    return $?
  fi
}
get_ifname() {
  if which ip 2>/dev/null >/dev/null; then
    IFNAME=$(ip -o link | grep -i "$1" | sed -e 's/^[0-9]*: //' -e 's/:.*//')
  elif which esxcfg-nics 2>/dev/null >/dev/null; then
    IFNAME=$(esxcfg-nics -l | grep -i "$1" | cut -d " " -f 1)
  else
    IFNAME=$(ifconfig -a | grep -i "$1" | cut -d " " -f 1)
    if [ -z $IFNAME ]; then
      IFNAME=$(ifconfig -a | grep -i -B 2 "$1" | sed -n '/flags/s/:.*$//p')
    fi
  fi
}

#  Start eth3
#  Skipping (slave-interface)
#  Start bond0
# Configuring bond0 (0C:C4:7A:B0:97:B8)
if mac_exists 0C:C4:7A:B0:97:B8
then
  get_ifname 0C:C4:7A:B0:97:B8
  echo "network --device=$IFNAME --bootproto=static --ip=192.168.100.221 --netmask=255.255.255.0 --gateway=192.168.100.254 --nameserver=192.168.100.240 --hostname=fsmanager" >> /tmp/pre_install_network_config
fi
#  Start eth2
#  Skipping (slave-interface)
#  Start eth1
#  Skipping (slave-interface)
#  Start eth0
#  Skipping (slave-interface)
# End pre_install_network_config generated code

# Enable installation monitoring

%end

%post
# End yum configuration



# Start post_install_network_config generated code

# we have bonded interfaces, so set max_bonds
if [ -f "/etc/modprobe.conf" ]; then
    echo "options bonding max_bonds=1" >> /etc/modprobe.conf
fi

# create a working directory for interface scripts
mkdir /etc/sysconfig/network-scripts/cobbler
cp /etc/sysconfig/network-scripts/ifcfg-lo /etc/sysconfig/network-scripts/cobbler/

# set the gateway in the network configuration file
grep -v GATEWAY /etc/sysconfig/network > /etc/sysconfig/network.cobbler
echo "GATEWAY=192.168.100.254" >> /etc/sysconfig/network.cobbler
rm -f /etc/sysconfig/network
mv /etc/sysconfig/network.cobbler /etc/sysconfig/network

# set the hostname in the network configuration file
grep -v HOSTNAME /etc/sysconfig/network > /etc/sysconfig/network.cobbler
echo "HOSTNAME=fsmanager" >> /etc/sysconfig/network.cobbler
rm -f /etc/sysconfig/network
mv /etc/sysconfig/network.cobbler /etc/sysconfig/network

# Also set the hostname now, some applications require it
# (e.g.: if we're connecting to Puppet before a reboot).
/bin/hostname fsmanager

# Start configuration for eth3
echo "DEVICE=eth3" > /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "SLAVE=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "MASTER=bond0" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "HOTPLUG=no" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth3
# End configuration for eth3

# Start configuration for bond0
echo "DEVICE=bond0" > /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
if [ -f "/etc/modprobe.conf" ]; then
    echo "alias bond0 bonding" >> /etc/modprobe.conf.cobbler
fi
cat >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0 << EOF
BONDING_OPTS="mode=6 miimon=100"
EOF
echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
echo "IPADDR=192.168.100.221" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
echo "NETMASK=255.255.255.0" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
echo "DNS1=192.168.100.240" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-bond0
# End configuration for bond0

# Start configuration for eth2
echo "DEVICE=eth2" > /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "SLAVE=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "MASTER=bond0" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "HOTPLUG=no" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth2
# End configuration for eth2

# Start configuration for eth1
echo "DEVICE=eth1" > /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "SLAVE=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "MASTER=bond0" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "HOTPLUG=no" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth1
# End configuration for eth1

# Start configuration for eth0
echo "DEVICE=eth0" > /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "ONBOOT=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "SLAVE=yes" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "MASTER=bond0" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "HOTPLUG=no" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "TYPE=Ethernet" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
echo "BOOTPROTO=none" >> /etc/sysconfig/network-scripts/cobbler/ifcfg-eth0
# End configuration for eth0

sed -i -e "/^nameserver /d" /etc/resolv.conf
echo "nameserver 192.168.100.240" >>/etc/resolv.conf

sed -i 's/ONBOOT=yes/ONBOOT=no/g' /etc/sysconfig/network-scripts/ifcfg-eth*

rm -f /etc/sysconfig/network-scripts/ifcfg-eth3
rm -f /etc/sysconfig/network-scripts/ifcfg-bond0
rm -f /etc/sysconfig/network-scripts/ifcfg-eth2
rm -f /etc/sysconfig/network-scripts/ifcfg-eth1
rm -f /etc/sysconfig/network-scripts/ifcfg-eth0
mv /etc/sysconfig/network-scripts/cobbler/* /etc/sysconfig/network-scripts/
rm -r /etc/sysconfig/network-scripts/cobbler
if [ -f "/etc/modprobe.conf" ]; then
cat /etc/modprobe.conf.cobbler >> /etc/modprobe.conf
rm -f /etc/modprobe.conf.cobbler
fi
# End post_install_network_config generated code



%end

%post
echo -e "192.168.100.224   fsdn1" >> /etc/hosts
echo -e "192.168.100.225   fsdn2" >> /etc/hosts
echo -e "192.168.100.226   fsdn3" >> /etc/hosts
echo -e "192.168.100.221   fsmanager" >> /etc/hosts
echo -e "192.168.100.222   fsnn1" >> /etc/hosts
echo -e "192.168.100.223   fsnn2" >> /etc/hosts


service iptables stop
chkconfig iptables off

echo -e "alias bond0 bonding" >>/etc/modprobe.d/bonding.conf
echo -e "options bonding mode=6 miimon=100" >>/etc/modprobe.d/bonding.conf

echo -e "echo never > /sys/kernal/mm/redhat_transparent_hugepage/defrag" >> /etc/rc.local
echo -e "echo never > /sys/kernal/mm/transparent_hugepage/defrag" >> /etc/rc.local
echo -e "echo never > /sys/kernal/mm/redhat_transparent_hugepage/enabled" >> /etc/rc.local
echo -e "echo never > /sys/kernal/mm/transparent_hugepage/enabled" >> /etc/rc.local
echo -e "vm.swappiness = 0" >> /etc/sysctl.conf
echo -e "vm.max_map_count = 262144" >> /etc/sysctl.conf
echo -e "net.ipv4.ip_local_port_range = 10000 65535" >> /etc/sysctl.conf
sysctl -p
echo -e "* soft nofile 32768" >>/etc/security/limits.conf
echo -e "* hard nofile 32768" >>/etc/security/limits.conf
echo -e "root soft nofile 32768" >>/etc/security/limits.conf
echo -e "root hard nofile 32768" >>/etc/security/limits.conf
echo -e "* soft memlock unlimited" >>/etc/security/limits.conf
echo -e "* hard memlock unlimited" >>/etc/security/limits.conf
echo -e "root soft memlock unlimited" >>/etc/security/limits.conf
echo -e "root hard memlock unlimited" >>/etc/security/limits.conf
echo -e "* soft as unlimited" >>/etc/security/limits.conf
echo -e "* hard as unlimited" >>/etc/security/limits.conf
echo -e "root soft as unlimited" >>/etc/security/limits.conf
echo -e "root hard as unlimited" >>/etc/security/limits.conf
sed -i "s/^*          soft    nproc     1024/*          soft    nproc     10240/g" /etc/security/limits.d/90-nproc.conf
ulimit -a
sed -i '/#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap/a\restrict 192.168.99.0 mask 255.255.255.0 nomodify notrap' /etc/ntp.conf
sed -i '/server 0.centos.pool.ntp.org iburst/i\server  1.cn.pool.ntp.org preferr' /etc/ntp.conf
echo -e "server  127.127.1.0     # local clock" >>/etc/ntp.conf
echo -e "fudge   127.127.1.0 stratum 10" >>/etc/ntp.conf
service ntpd start
chkconfig ntpd on

wget  http://192.168.110.210/cblr/links/CentOS-6.7-x86_64/jdk-7u67-linux-x64.tar.gz -P /root
mkdir -p /usr/jdk64/
tar -zxvf /root/jdk-7u67-linux-x64.tar.gz -C /usr/jdk64/
cat >> /etc/profile << 'EOF'
export JAVA_HOME=/usr/jdk64/jdk1.7.0_67
export PATH=$JAVA_HOME/bin:$PATH:$HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
EOF
source /etc/profile

wget  http://192.168.110.210/cblr/links/CentOS-6.7-x86_64/koan-2.6.11-1.el6.noarch.rpm -P /root
rpm -ivh /root/koan-2.6.11-1.el6.noarch.rpm

mkdir /root/.ssh/
chmod 700 /root/.ssh/
cat >/root/.ssh/config <<-EOF
StrictHostKeyChecking no
UserKnownHostsFile /dev/null
EOF
cat >/root/.ssh/id_rsa <<-EOF
-----BEGIN RSA PRIVATE KEY-----
MIIEoQIBAAKCAQEA159xWLESQKxo7xm2iN5Gs//YXvOX6H4pcZJnCgc53vT4I4Di
h3SdnS7g33WezkzNjasuzuiflWB7XkPnCHWMP2LpshY7MAjMtgfv3t4Lo7W4zlhh
IgrynJbzPCFMgLQhCAzOzgOPgV/szPA0ydka82Mo9eScUnzLOuVFYEjCKe2g/TVL
mmfIgMtE4bI3G6df8BNH+9g/L5id/fWT+FUMjVX0gMWgd3Q9xi984WJaQKQu+y60
tt1s38P/5xA1+ly7jN8MgJeHTRt//Xa61g7n5qWd1z29HJObmT2KbvuWyZXxYJLd
KyWcfIRxPY7hursIBHtEmvGnaau/gD4XLe7QlwIBIwKCAQAYpIH7gfN1GwStnInj
waGuK942vMDnXuAqPJ4Pxk/BtZizmbN9MeYgl6Sr0u2T64U0wxtK2MHH7cT01I9u
rlkr0MpAPQ4UHkNIAOg2ukp5HBUe5YdxmtnmAp90lhdfKoduomDHFlmLIOfc6ECM
GM/hTSlArGmjBvKnpSyACFC0VXZJ4ZM1t/hQ4Ozsu23YFifuTC6hm3nvM+hwMSfV
Wu9kllgU2PeBOvUtmORcs9p4Drfs+N9AaOA72iRad7t6kyeXU0o9TUPzwcwCICtO
h+ez9aGmB2DZOB2FxHL3gpitVa065qGvC830u8rt68vA8VTwqhN7WjqZCBOLka++
0kmLAoGBAO8c5J74jmzKv79oUgcmYf6jfyA2cwKrbZMaXgs8ouufkKZRLlzqxF5f
ZXd1YzM/xiVFB5EmEUGC1V1MTr0gewfH3g52yIHJVO2QHw5OJ1QKrNLHSF1AT5u3
0VUUgn5AZstFy/OS66qTzNFZZwUaBBwcO188+U1XUBt7dFSmUnfXAoGBAObZ2uSL
z57yW2xh+C7Sg4PneY+/VNGXJNkN6Www1nI9oct5LM3h6/4X0DdA2W9mXUBcpYId
NoFROeSDKdBpWhlY6DRxavLu5tlavjGYwmh1U4SjNNBvmP2O9UdkwmCcgXpXZOLc
kqfLTHBCWKXId0Sub7rmotlXVPj/jwDB7FVBAoGBAIHN2zG6IW5CLZPK6rNsm5jc
aZUk31k4fU/bHRwK+VtWnvszYk+ypR1Jur0xGJgp7zjNs6aRAg2ey5kMKr5wt9EG
GXWQ8ID4RAvvJs1AXn4UbHJsLpkFp48MA+xbl0vZ0WcIoeqgNspQO/yePz1IoyUz
5bdbnUc+BupY9gIRJXRBAoGAO1yXX1cmwnjVrifSGqspIesQoU505XACKS92iYjm
r6lyv0sLhWX62vAuOhf9ZcnddvNAgIsrRdMO4v0oAmQ7vWABMg6JNyd9MJOtP/QU
u8Zl7ugjhg4RZcWsyTcqqyDuGCUZ8TFnijuXUBEPexZKjgD4KL72rOqSMWZJV/da
B0sCgYAwQu2sW2ohR5ZCtI5WZTmSIi5KcBtGCHM8UIMQhl0TgQni83LfkBaUcHAr
Wi6lVvEkFDKpjkS1GICA1JT7vQWDKJY211Ut5snkV6wGKb5KkVczzRjmvCv77rH9
b80ZLdnIvTS8clQIQE/0DVwmEQ5LNf9vdIMKr6gZ2CEMySyzsA==
-----END RSA PRIVATE KEY-----
EOF
chmod 600 /root/.ssh/id_rsa
cat >/root/.ssh/authorized_keys <<-EOF
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA159xWLESQKxo7xm2iN5Gs//YXvOX6H4pcZJnCgc53vT4I4Dih3SdnS7g33WezkzNjasuzuiflWB7XkPnCHWMP2LpshY7MAjMtgfv3t4Lo7W4zlhhIgrynJbzPCFMgLQhCAzOzgOPgV/szPA0ydka82Mo9eScUnzLOuVFYEjCKe2g/TVLmmfIgMtE4bI3G6df8BNH+9g/L5id/fWT+FUMjVX0gMWgd3Q9xi984WJaQKQu+y60tt1s38P/5xA1+ly7jN8MgJeHTRt//Xa61g7n5qWd1z29HJObmT2KbvuWyZXxYJLdKyWcfIRxPY7hursIBHtEmvGnaau/gD4XLe7Qlw== root@bgw-os-node152
EOF
%end
